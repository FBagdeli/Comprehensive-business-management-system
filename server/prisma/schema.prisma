// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
}

enum transactionType {
  SALE
  PURCHASE
}

enum productType {
  RING
  NECKLACE
  BRACELET
  EARRING
  ANKLET
  BROOCH
  PENDANT
}

model User {
  id          Int       @id @default(autoincrement())
  firstName   String
  lastName    String
  phoneNumber String?
  password    String
  role        UserRole  @default(ADMIN)
  email       String?
  invoices    Invoice[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Invoice {
  id             Int               @id @default(autoincrement())
  userId         Int
  user           User              @relation(fields: [userId], references: [id])
  supplierId     Int
  supplier       Supplier          @relation(fields: [supplierId], references: [id])
  customerId     Int
  customer       Customer          @relation(fields: [customerId], references: [id])
  invoiceProduct InvoiceProduct[]
  type           transactionType   @default(SALE)
  totalPrice     Int
  createdAt      DateTime          @default(now())
  updatedAt      DateTime          @updatedAt
}

model Supplier {
  id          Int       @id @default(autoincrement())
  firstName   String
  lastName    String
  invoices    Invoice[]
  phoneNumber String?
  address     String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Customer {
  id          Int       @id @default(autoincrement())
  firstName   String
  lastName    String
  phoneNumber String?
  address     String?
  email       String?
  invoices    Invoice[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model InvoiceProduct {
  id               Int      @id @default(autoincrement())
  invoiceId        Int
  invoice          Invoice  @relation(fields: [invoiceId], references: [id])
  productId        Int
  product          Product  @relation(fields: [productId], references: [id])
  quantity         Int
  weight           Decimal  @db.Decimal(9, 3)
  dailyGoldPriec   Decimal  @db.Decimal(9, 3)
  price            Int
  jewelryMakingFee Int
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

model Product {
  id               Int               @id @default(autoincrement())
  invoiceProduct   InvoiceProduct[]
  code             Int               @unique @default(autoincrement())
  type             productType       @default(RING)
  name             String
  description      String?
  weight           Decimal           @db.Decimal(9, 3)
  quantity         Int
  jewelryMakingFee Int
  price            Int
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
}
